
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ramiz
 */
public class TestLogin extends javax.swing.JFrame {
  Connection con;
    ResultSet rs;
    Statement st;
    PreparedStatement  stmt;
    /**
     * Creates new form TestLogin
     */
    
     public static int user=1;
                 
           
    
    
    public TestLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("UserName");

        jLabel2.setText("PassWord");

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");

        jButton3.setText("Confirm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
      //int r1=    user++;
      String user1=returnUseridFOrdb();
         
         
         
        //user++;
   System.out.println("user:"+user1);       
          //System.out.println("Random Number ["+ (i+1) + "] : " + (int)(Math.random()*1000));
					
           System.out.println("Random Number  : " + (int)(Math.random()*10000));
            int r=(int)(Math.random()*10000);
           String password=r+"";
           System.out.println("password:"+password);
           String level="Staff";
         try 
        {
     Class driver=Class.forName("com.mysql.jdbc.Driver");
		driver.newInstance();
		 con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/caters", "root", "");
//st=con.createStatement();
                 
  
//           stmt=con.prepareStatement("Select * from item where ItemId=? , name=?, price=? ,quantity=?,description=?,status=?,created_id=?");
          //   stmt=con.prepareStatement("insert into stud values (?,?)");    
 
         
        
           
        //   r=r1.getActionCommand();
//            System.out.println("r="+r);
//        //   r=r2.getActionCommand();
//            System.out.println("r="+r);
//          System.out.println("r="+r);
          
            //cn1= new ConItem();
              
                 
               stmt=con.prepareStatement("insert into login3 (username,password,level) values (?,?,?)"); 
            
                  stmt.setString(1,user1);
                     stmt.setString(2,password);
                        stmt.setString(3,level);
               //stmt.setString(2, (t2.getText()));
//               cn1.stmt.setInt(3,Integer.parseInt (t3.getText()));
//                cn1.stmt.setInt(4,Integer.parseInt (t4.getText()));
//                  cn1.stmt.setString(5, (t5.getText()));
//                  cn1.stmt.setInt(6,Integer.parseInt (t6.getText()));
//                     cn1.stmt.setInt(7,Integer.parseInt (t7.getText()));
//                       cn1.stmt.setString(8,r);
               int i=stmt.executeUpdate();
               if(i==-1)
               {
                  JOptionPane.showMessageDialog(this, "record not inserted"); 
               }
               else
               {
                 JOptionPane.showMessageDialog(this, "record inserted");   
                   
               }
           }
           catch(Exception e)

           
           
           
           
           
           
           
           
           
           
           
           {
                System.out.println(e);
                e.printStackTrace();
                
           }
                   

    
    
    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public String generateUserid()
    {
        System.out.println("generateUserid");
         int random = (int)(Math.random()* 10 ) + 5;
                    System.out.println(random);
  
                    SecureRandom sec=new SecureRandom();
                    int nextint=sec.nextInt();
                    
                    
                    // String user1="user"+user +"";
         String user1="user"+nextint +"";
       System.out.println("generateUserid user1="+user1);
       
       return user1;
           
        
        
    }
    //function to insert valid userid;
    public String returnUseridFOrdb()
    {
      String generateUser=generateUserid();
      
      String checifvalid=checkIfuserExist(generateUser);
      
      if("invalid".equals(checifvalid))
      {
          System.out.println("user alreayd exist in db.generate another user");
          returnUseridFOrdb();
          
      }
      
      
      return generateUser;
        
        
        
        
    }
    
    
    public  String checkIfuserExist(String userid)
    {
        System.out.println(" checkIfuserExist userid="+userid);
        
        String returnvalue="invalid";
        try {
            System.out.println("checkIfuserExist");
              Class driver = null;
            try {
                driver = Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
                    driver.newInstance();
            try {
                con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3307/caters", "root", "");
            } catch (SQLException ex) {
                Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
           // return null;
        } catch (InstantiationException ex) {
            Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String checkifuser="select * from login3;";
        System.out.println("checkifuser="+checkifuser);
         PreparedStatement pstmtcheck=null;
        try {
             pstmtcheck=con.prepareStatement(checkifuser);
        } catch (SQLException ex) {
            Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ResultSet rscheck=pstmtcheck.executeQuery();
            
          //  rscheck.get
            
            while(rscheck.next())
            {
                
                String usernamecheck=rscheck.getString("username");
                System.out.println("usernamecheck="+usernamecheck);
            if(userid.equals(rscheck))
            {
                
                returnvalue="invalid";
                System.out.println("user exist already");
                
                
            }else
            {
              //  returnvalue="valid"
                        ;
                System.out.println("user does not exist it is valid");
                break;
            }
               
                
                }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
        }finally
        {
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(TestLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        return returnvalue;
    }
    
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
//        int opt1=JOptionPane.showConfirmDialog(parent,"Do you want to add anather member detail?","Confirm Message",JOptionPane.YES_NO_OPTION);
//                
//                if()
                    
                     int opt1= JOptionPane.showConfirmDialog(this, "Do you want to add another ?", "Confirm Message", JOptionPane.YES_NO_OPTION);
                            if(opt1==JOptionPane.NO_OPTION)
                            { this.dispose(); }
                            if(opt1==JOptionPane.YES_OPTION)
                            jTextField3.setText(""); 
                        
                
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestLogin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
